@import jrocks.plugin.api.ClassApi
@import jrocks.plugin.api.FieldApi
@import jrocks.plugin.api.ClassParameterApi
@import java.time.LocalDateTime
@import java.time.format.DateTimeFormatter
@option discardLogicWhitespace=true
@args(ClassApi bean, ClassParameterApi param)

import {Component, Inject, OnInit} from '@@angular/core';
import {MAT_DIALOG_DATA, MatDialogRef} from "@@angular/material";
import {FormBuilder} from "@@angular/forms";
import {@bean.simpleName()} from "../../../model/@bean.resourceName()";
import {@bean.simpleName()Service} from "../../../service/@String.format("%s.service", bean.resourceName())";


@@Component({
  selector: 'app-edit',
  templateUrl: './deleteDialogComponent.rocker.html',
  styleUrls: ['./delete-dialog.component.scss']
})
export class Delete@bean.simpleName()DialogComponent implements OnInit {

  id: number;
  username: string;
  firstname: string;
  lastname: string;

  constructor(
    private @bean.propertyName()Service: @bean.simpleName()Service,
    private fb: FormBuilder,
    private dialogRef: MatDialogRef<Delete@bean.simpleName()DialogComponent>,
    @@Inject(MAT_DIALOG_DATA) {id, firstname, lastname, username}: @bean.simpleName()) {

    this.id = id;
    this.firstname = firstname;
    this.lastname = lastname;
    this.username = username;
  }

  ngOnInit() {
  }

  delete() {
    this.@bean.propertyName()Service.delete@bean.simpleName()(this.id)
      .subscribe(saved => {
        console.log("@bean.simpleName() with id " + this.id + " deleted with success");
      });
    this.dialogRef.close("Delete " + this.username  + " with id " + this.id);
  }

  close() {
    this.dialogRef.close();
  }

}
